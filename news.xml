<div xmlns="http://www.w3.org/1999/xhtml">
  <div>
    <h1 style="font-family: sans-serif; width: 55%; float: left;text-align: left;">The specification and the TODO-list</h1>
    <p style="width: 38%; float: left;text-align: right">
      <em>
        <strong>
		Sigfrid Lundberg's Stuff,
	      2009-11-01</strong>
      </em>
    </p>
  </div>
  <div style="clear:both;"> </div>
  <div style="width:100%;">
    <div>

      <p>People within any profession or trade should continuously be involved
      in discussions of quality. I describe my profession as <em>web
      developer</em> and my trade as <em>digital libraries</em>. These areas
      are no exception.</p>

      <p>Like many web developers I spend a better part of my day on coding
      and other activities related to software development. But so do people
      involved in non-linear oscillation simulators. The web is an
      <em>application area</em>, but like non-linear systems it is also an
      area of research on its own right, and so is digital library
      research.</p>

      <p>There is more to digital libraries than just software
      development. There are all research concerning resource description, and
      how it relates to usability. There are also extensive standardization
      work going on. Now, how much digital library knowledge would a
      programmer need to know in order to build a good service?</p>

      <h2>The specification and the TODO-list</h2>

      <p>In theory nothing. If the specification is good enough, then the
      product should be good enough and this could, again in theory, ensured
      by unit tests.</p>

      <p>The problems here are, first, the quality of the specification, and,
      secondly, the <a href="http://sigfrid-lundberg.se/entries/2009/11/twocultures/">Two
      Cultures</a> (developers and editorial staff do not always understand
      each other).  The two problems are related to each other.</p>

      <p>The specification is a part of the agreement between the programmer
      and his or her customer. The work is completed when everything in the
      spec is in place. Programmer's need to know when they can send the
      bill.</p>

      <p>We who write software, we're a kind of mathematical people. We will
      feel secure if we know that the axioms are in place, that the theorems
      are there as well, and that the deductions are correct.</p>

      <p>For instance, if a piece of software is intended to assist an
      aircraft both at take-off and landing, then the specification should say
      so. Even if we thus kind of state the obvious, or if could imagine that
      there is no space in the sky for all planes that wouldn't be able to
      land.</p>

      <h2>The web and software as services</h2>

      <p>The web changed this. Not entirely but to a very large
      extent. There's a fundamental difference between being a vendor and
      being a service provider. The service provider try to get more users all
      the time which calls for continuous development.</p>

      <p>Through the web, a software vendor and a service provider could all
      of a sudden compete on the same market. The software vendor use the
      traditional specification, but a service implies software which is in
      continuous development. Strictly speaking, there are no projects
      anymore, just different activities. No specifications anymore, but TODO
      lists containing incidents, bugs and requests for features ranked by
      importance.</p>

      <p>And there is a continuous need for innovation.</p>


    </div>
    <p style="text-align: left;"><em><strong>Categories:</strong></em> 
	  <a href="/subjects/programming/">Programming</a><br/><em><strong>
		Permalink:
	      </strong></em><a rel="bookmark" href="/entries/2009/10/programming/">http://sigfrid-lundberg.se/entries/2009/10/programming/</a></p>
    <hr width="50%" align="center"/>
  </div>
  <div>
    <h1>Other, not yet obsolete stuff</h1>
    <table class="news">
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/11/twocultures/"><em>The two Cultures</em></a><br/>Do you know the second law of thermodynamics?<br/><a href="/subjects/programming/">Programming</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/10/webdevelopment/"><em>What about the HECS platforms?</em></a><br/>I've used fortran, pascal, C, perl, php and java in addition to
  more specialized tools such as SQL and XSLT. There is currently a lot of
  discussions on what platform will be the next winner.<br/><a href="/subjects/programming/">Programming</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/08/opensearch/"><em>Syndication and Simple REST XML web services in a library context</em></a><br/>Some time ago I demonstrated our navigation services. In that entry
  I promised to tell you more about these services when they are are more
  mature. Here is the story on the architecture of some of our new
  digitization services.<br/><a href="/subjects/xws/">XML web services</a>,
	<a href="/subjects/metadataprocessing/">Metadata processing</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/09/msb/"><em>Att tjäna den demokratiska kulturnationens minne</em></a><br/>Jag har arbetat med att programmera digitala bibliotek i ungefär 15
  år. När jag läser debatten om biblioteket i Sydsvenskan känner jag att jag
  borde säga något. Jag vet inte i vilken utsträckning mitt perspektiv kommer
  att kännas relevant för alla de som känner sig kallade att yttra sig, men
  jag har en hel del erfarenheter som nog de flesta andra saknar.<br/><a href="/subjects/thelibrary/">The Library</a>,
	<a href="/subjects/internet/">Internet</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/footnotes/"><em>Add footnotes to my pages -- a prototype text annotation
  interface</em></a><br/>I've had a javascript based forum with thread for each entry. That
  seemed boring to me. Why should users be restricted to commenting entire
  articles. Why not letting them add footnotes to arbitrary positions in a
  text. In this entry I experiment with this feature.<br/><a href="/subjects/structuralwebdesign/">Structural web design</a>,
	<a href="/subjects/xmlprocessing/">XML Processing</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/09/twelveweeks/"><em>Twelve weeks</em></a><br/>It is twelve weeks since i refurbished and redecorated this
  site. It is time for an evaluation...<br/><a href="/subjects/essays/">Essays</a></td>
      </tr>
    </table>
  </div>
</div>
