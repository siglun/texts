<div xmlns="http://www.w3.org/1999/xhtml">
  <div>
    <h1 style="font-family: sans-serif; width: 55%; float: left;text-align: left;">A form with a join</h1>
    <p style="width: 38%; float: left;text-align: right">
      <em>
        <strong>
		Sigfrid Lundberg's Stuff,
	      2010-03-05</strong>
      </em>
    </p>
  </div>
  <div style="clear:both;"> </div>
  <div style="width:100%;">
    <div>

      <p>A <strong>form</strong> is a document, or a part of one, that can be
      used for the entry of data. A <strong>join</strong> is a construct in
      query languages such SQL. A join allows you to lookup data in one part
      of a database based on a query in an other part. Joins are general, and
      may appear in other contexts than SQL. Such as XQuery, XSLT and XML
      forms language, XForms. I've recently written my first extensive
      application in that language.</p>

      <p>Having worked with XML processing for more than ten years, I'd say
      that I thought that I would easily be able to relate to a new XML
      technology by extrapolating from my earlier experiences. This has
      hitherto been the case. For instance, learning Xerces in java when I've
      used dom4j in java and XML::LibXML in perl was i piece of cake. If
      you've used venerable Expat callback based parser, the idea behind SAX
      or Stream API for XML (StaX) are quite obvious.</p>

      <p>One could expect that if you know XML technologies and HTML forms you
      would easily grasp XForms. Having realised that this wasn't the case I
      thought that having learned XPath and XSLT I would easily grasp
      XForms. That was true, but only partly. A small part.</p>

      <h3>UI and Events</h3>

      <p>An XForm script, just as an XSLT one, can read XML documents and act
      upon them. The result is very different. XSLT generates another
      document, usually an XML one. The XForm generates a form, a graphical
      user interface. And it is usually one that can be used for editing
      XML. A user interface is event driven, an there are a whole lot of <a href="http://en.wikipedia.org/wiki/DOM_events">events to keep track
      of</a>.</p>

      <div style="float: right; width:50%;">
      <pre>
&lt;data&gt; 
  &lt;lookup&gt;
    &lt;values xml:id="id1"&gt;
      &lt;value&gt;one a&lt;/value&gt;
      &lt;value&gt;one b&lt;/value&gt;
      &lt;value&gt;one c&lt;/value&gt; 
    &lt;/values&gt;
    &lt;values xml:id="id2"&gt; 
      &lt;value&gt;two a&lt;/value&gt;
      &lt;value&gt;two b&lt;/value&gt; 
      &lt;value&gt;two c&lt;/value&gt;
    &lt;/values&gt; 
    &lt;values xml:id="id3"&gt;
      &lt;value&gt;three&lt;/value&gt; 
    &lt;/values&gt;
  &lt;/lookup&gt; 
  &lt;keys&gt; 
    &lt;key lookup="id1"&gt;first&lt;/key&gt; 
    &lt;key lookup="id2"&gt;second&lt;/key&gt;
    &lt;key lookup="id3"&gt;third&lt;/key&gt;
  &lt;/keys&gt; 
&lt;/data&gt;
      </pre>

      <p><small>Fig. 1. An XML snippet where there is a list of key's that via
      a reference (a socalled IDREF) in an attribute called lookup refer to
      nodes in another part of the document. The references are anchored using
      xml:id attributes. The relation between the keys and the values is one
      to many.</small></p>

      </div>


      <p>What is a brilliant feature in XSLT might not work at all in a GUI,
      so if you're a lover of the functional programming style recursive
      processing in XSLT you'll be disappointed. XForms isn't XML transformed
      into forms, it is language for writing GUIs for XML.</p>

      <p>Typically one can write really nifty GUI's in XForms. You'll find a
      lot of examples online, for instance by following links from the <a href="http://en.wikipedia.org/wiki/XForms">Wikipedia article</a>.  There
      are various implementations, serverside ones as well as those running
      client side. I opted for the one implemented as a <a href="https://addons.mozilla.org/en-US/firefox/addon/824">Firefox
      plugin</a>.</p>

      <h3>Join's and XML documents</h3>

      <p>My project is about editing quite complicated documents, namely
      really heavy beasts in <a href="http://www2.lib.virginia.edu/innovation/mei/">Music Encoding
      Initiative XML</a>. We're building a MEI application while the Perry
      people is revising the standard and, among other thins, move from a DTD
      to <a href="http://relaxng.org/">RelaxNG</a>. A wise move.</p>

      <p>I might return to the project itself at a later stage, but here I
      want to tell you about XForms itself. And about joins. Consider the
      fragment in Fig. 1. If you want to be able to edit the values in the
      vicinity of the keys, you may need <a href="/entries/2010/03/aformwithajoin/a_form_with_a_join.xml">a form
      like this</a> (requires XForms in your browser). The essential code
      performing the join can be studied in Fig. 2.</p>

      <div>
	<pre>
      &lt;xf:group ref="instance('data-instance')/keys"&gt;
          &lt;xf:repeat nodeset="key"
        	  id="lookup-keys-loop"&gt;
               &lt;!-- do things with each key --&gt;
               &lt;xf:repeat 
                       nodeset="instance('data-instance')/lookup/
                       values[<span style="color:red;">@xml:id = current()/@lookup</span>]/value"
                       id="value-loop"&gt;
               &lt;!-- do things with value group --&gt;
               &lt;/xf:repeat&gt;
          &lt;/xf:repeat&gt;
       &lt;/xf:group&gt;
	</pre>

	<p style="margin-left:+5%;margin-right:+5%;"><small>Fig. 2. XForms
	snippet that loops around all key elements and for each of them make
	the lookup. That is, here we have the join in red colour. xf is short
	for the xforms namespace, which is
	http://www.w3.org/2002/xforms</small></p>

      </div>

       <p>The core is the XPath function <kbd style="font-family:courier;">current()</kbd> which returns the current
       context node. This construct can then be combined with input fields,
       textareas etc.</p>

       

    </div>
    <p style="text-align: left;"><em><strong>Categories:</strong></em> 
	  <a href="/subjects/xmlprocessing/">XML processing</a>,
	    <a href="/subjects/metadataprocessing/">Metadata processing</a><br/><em><strong>
		Permalink:
	      </strong></em><a rel="bookmark" href="/entries/2010/03/aformwithajoin/">http://sigfrid-lundberg.se/entries/2010/03/aformwithajoin/</a></p>
    <hr width="50%" align="center"/>
  </div>
  <div>
    <h1>Other, not yet obsolete stuff</h1>
    <table class="news">
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/02/youdontneed/"><em>Why you need a persistence strategy</em></a><br/>Here I go through some of the arguments why you need to implement a
  persistence strategy. We also conclude that the hypertext link is the single
  thing that makes the Worldwide web to a web. Hence it is a serious thing. If
  you're working within the digital library world you should be devoted to the
  hypertext link.<br/><a href="/subjects/structuralwebdesign/">Structural web design</a>,
	<a href="/subjects/internet/">Internet</a></td>
      </tr>
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/02/persid/"><em>The URN:NBN is dead and resurrection is meaningless</em></a><br/>I'm one of those who try to base all decisions on facts. Politics
  belong to the strategic field, and in that field the only thing I can offer
  is advice.<br/><a href="/subjects/structuralwebdesign/">Structural web design</a>,
	<a href="/subjects/internet/">Internet</a></td>
      </tr>
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/02/mor_minns/"><em>Podcast: Mor minns</em></a><br/>Min mor har tre år kvar till 100. Jag menar att hon är en helt
  fantastisk kvinna, med ett knivskarpt intellekt. Hon fick aldrig gå mer än
  sju år i skolan som barn, men i 60-årsåldern tog hon i princip
  gymnasiekompetens. I denna serie läser hon dikter och berättar ur minnet
  eftersom hon är nästan blind.<br/><a href="/subjects/essays/">Essays</a></td>
      </tr>
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/02/semanticdrift/"><em>The proliferation of redundant meaning</em></a><br/>I first used the term semantic drift about 10 years ago. It was a
  real danger then, it still is but the proliferation of synonymous
  vocabularies is worse still.<br/><a href="/subjects/internet/">Internet</a>,
	<a href="/subjects/metadata/">Metadata</a></td>
      </tr>
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/02/ibooook/"><em>Amazon, Adobe &amp; Apple</em></a><br/>My attitude towards eBooks has always been negative. Why should we lock content into proprietary formats. The sitution has changed.<br/><a href="/subjects/internet/">Internet</a></td>
      </tr>
      <tr>
        <td class="left">2010</td>
        <td class="left"><a href="/entries/2010/01/crossroad/"><em>An Irish Stew</em></a><br/>Is Internet at a crossroad?<br/><a href="/subjects/internet/">Internet</a></td>
      </tr>
    </table>
  </div>
</div>
