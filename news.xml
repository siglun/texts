<div xmlns="http://www.w3.org/1999/xhtml">
  <div>
    <h1 style="font-family: sans-serif; width: 55%; float: left;text-align: left;">What about the HECS platforms?</h1>
    <p style="width: 38%; float: left;text-align: right">
      <em>
        <strong>
		Sigfrid Lundberg's Stuff,
	      2009-10-17</strong>
      </em>
    </p>
  </div>
  <div style="clear:both;"> </div>
  <div style="width:100%;">
    <div>

      <p>Anyone who has stayed in the same business for some years, have seen
      the recurrent changes in fashion. You'll also experience how people try
      to sell you the <a href="http://en.wikipedia.org/wiki/Little_black_dress">little black
      dress</a> as something new. People invent a lot of things. Some of them
      are not that innovative. Some ideas required further development before
      they could take off. Some ideas were right, but the time wasn't.</p>

      <p>The <a href="http://www.tbray.org/ongoing/When/200x/2009/10/14/OOW-Take-aways#p-2">legacy</a>
      is something that is accumululating behind you. What someone (usually
      someone else) acquired or developed. You don't like the legacy, in
      particular not its documentation, but you have to maintain it.</p>

      <p>Once upon a time just about every script on the internet was written
      in the PERL programming language. Then just about every introductory
      programming course choose java as the prime example of an OO
      language. Just about any project should have some object oriented
      modelling, and J2EE was the name of the game. There were noone available
      for the legacy.</p>

      <h2>The HECS platforms</h2>

      <p>Then things happen again. PHP had been there all along. Many of the
      largest sites hade been using it for years for front-end work. The
      back-end could be written in JAVA but C, C++, perl and python are
      used. For newer sites there are languages like <a href="http://haskell.org/">Haskell</a> and <a href="http://erlang.org/">Erlang</a>, H and E in HECS. The remaining
      characters are C as in <a href="http://clojure.org/">Clojure</a> and S
      for <a href="http://www.scala-lang.org/">Scala</a></p>

      <p>Mankind is stratified into those who are early adopters and those
      that are more hesitant. Some of the early adopters buy the little black
      dress over and over again. In a sense I belong to the hesitant ones;
      novelty per se does not add to my interest. On the other hand I can get
      very enthusiastic to learn about ideas and technologies that I find
      elegant and new <em>to me</em>. One such idea, which is a true design
      classic, is functional programming. It isn't strictly speaking new to
      me. I've studied the Scheme programming language, and I'm using
      XSLT and Xquery.</p>

      <p>I'm very impressed by the elegance of the Haskell programming
      language, and the community that has been built around it. <a href="http://hackage.haskell.org/">Hackage</a> is Haskell's answer to
      PERL's <a href="http://cpan.org/">cpan</a>, PHP's <a href="http://pear.php.net/">PEAR</a> and Python's <a href="http://pypi.python.org/pypi">pypi</a>. The Haskell developers
      seems to be most advanced when it comes to building an open-source
      community. I do believe that Erlang is the platform which has the best
      track record; it has been used in Ericsson's Open Telecom Platform, for
      building ATM switches, <a href="http://couchdb.apache.org/">couchDB</a>
      -- a modern cloud computing classic.</p>

      <p>Still, I'm going for Haskell. I want a language which isn't using any
      virtual machine. The <a href="http://www.haskell.org/haskellwiki/Referential_transparency">referential
      transparency</a> (purity) is just a wonderful idea. I wan't something
      really new and elegant, such as a little black dress.</p>


    </div>
    <p style="text-align: left;"><em><strong>Categories:</strong></em> 
	  <a href="/subjects/programming/">Programming</a><br/><em><strong>
		Permalink:
	      </strong></em><a rel="bookmark" href="/entries/2009/10/webdevelopment/">http://sigfrid-lundberg.se/entries/2009/10/webdevelopment/</a></p>
    <hr width="50%" align="center"/>
  </div>
  <div>
    <h1>Other, not yet obsolete stuff</h1>
    <table class="news">
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/08/opensearch/"><em>Syndication and Simple REST XML web services in a library context</em></a><br/>Some time ago I demonstrated our navigation services. In that entry
  I promised to tell you more about these services when they are are more
  mature. Here is the story on the architecture of some of our new
  digitization services.<br/><a href="/subjects/xws/">XML web services</a>,
	<a href="/subjects/metadataprocessing/">Metadata processing</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/09/msb/"><em>Att tjäna den demokratiska kulturnationens minne</em></a><br/>Jag har arbetat med att programmera digitala bibliotek i ungefär 15
  år. När jag läser debatten om biblioteket i Sydsvenskan känner jag att jag
  borde säga något. Jag vet inte i vilken utsträckning mitt perspektiv kommer
  att kännas relevant för alla de som känner sig kallade att yttra sig, men
  jag har en hel del erfarenheter som nog de flesta andra saknar.<br/><a href="/subjects/thelibrary/">The Library</a>,
	<a href="/subjects/internet/">Internet</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/footnotes/"><em>Add footnotes to my pages -- a prototype text annotation
  interface</em></a><br/>I've had a javascript based forum with thread for each entry. That
  seemed boring to me. Why should users be restricted to commenting entire
  articles. Why not letting them add footnotes to arbitrary positions in a
  text. In this entry I experiment with this feature.<br/><a href="/subjects/structuralwebdesign/">Structural web design</a>,
	<a href="/subjects/xmlprocessing/">XML Processing</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/09/twelveweeks/"><em>Twelve weeks</em></a><br/>It is twelve weeks since i refurbished and redecorated this
  site. It is time for an evaluation...<br/><a href="/subjects/essays/">Essays</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/08/diglib/"><em>The predigital library</em></a><br/>What is the strategic goal for a library web site? Could it be to
  put the library on the web, or is it basically to the library's resources
  visible to users anywhere on the globe?<br/><a href="/subjects/structuralwebdesign/">Structural web design</a></td>
      </tr>
      <tr>
        <td class="left">2009</td>
        <td class="left"><a href="/entries/2009/08/whatisabook/"><em>What is a book, and does it matter?</em></a><br/>Lorcan Dempsey of OCLC research, is involved in among lots of
  things, statistical analyses of media use. In that work they are forced to
  make operational definitions of the 'book'.<br/><a href="/subjects/essays/">Essays</a>,
	<a href="/subjects/media/">Media</a></td>
      </tr>
    </table>
  </div>
</div>
