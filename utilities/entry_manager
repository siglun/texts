#!/usr/bin/perl -w

#
# This utility creates directories and stub atom files, or just updates last
# modification time stamp in atom files.
#
# Author: Sigfrid Lundberg (siggelundberg@gmail.com)
# $Revision$ last modified $Date$ by $Author$
# $Id$
#

use strict;
use File::Path;
use XML::LibXML;
use XML::LibXSLT;
use Getopt::Long;

my $parser      = new XML::LibXML; 

# Constants 
my $xml_version = '1.0';
my $char_encod  = 'UTF-8';
my $atomNS      = 'http://www.w3.org/2005/Atom';
my $dcNS        = 'http://purl.org/dc/elements/1.1/';

# The time zone may, or may not, also be regarded as a constant
my $zone        = '+01:00';

# Options and default values
my $template    = 'utilities/atom_entry_template.xml';
my $base_uri    = 'http://www.sigfrid-lundberg.se';
my $directory   = '';
my $entry       = '';
my $create      = '';
my $update      = '';

# Get options from command line
my $result = GetOptions ("entry=s"     => \$entry,  
			 "directory=s" => \$directory,
			 "base_uri=s"  => \$base_uri,
			 "template=s"  => \$template,
			 "create"      => \$create,
			 "update=s"    => \$update);

# Trimming directory
$directory =~ s|/*$||;


#
# Boring localtime() gymnsastics
#

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
my $yyyy = 1900 + $year;
my $mm   = $mon +1;
my $dd   = $mday;

$mm   = '0' . $mm    unless ($mm   =~ m/\d\d/);
$dd   = '0' . $dd    unless ($dd   =~ m/\d\d/);
$hour = '0' . $hour  unless ($hour =~ m/\d\d/);
$min  = '0' . $min   unless ($min  =~ m/\d\d/);
$sec  = '0' . $sec   unless ($sec  =~ m/\d\d/);

my $date = join('T',(join('-',($yyyy,$mm,$dd)),
		     join(':',($hour,$min,$sec)))) . $zone;

#
# Checking command line
#

&usage() unless( (-d $directory && $entry) || $update); 

print STDERR join("\n\t\t",('Got options:',
		       "entry=$entry",
		       "directory=$directory",
		       "update=$update\n\n"));


print STDERR "Current valid W3CDTF is $date\n";
my $link = join '/',('',$directory,$yyyy,$mm,$entry,'');

my $pwd = `pwd`;chomp $pwd;
my $entry_home = $pwd.'/'.$link;
my $entry_file = '';
if(!$update) {
    $entry_file = $entry_home.'/' .$entry . '.atom';
}

if(-f $entry_file) {

    print STDERR "The file\n\t$entry_file\nexists already." .
	         " Won't overwrite existing file!\n\n";
    exit(0);
}

if($update) {
    $template   = $update;
    $entry_file = $update;
}

if(!$update) {
    print STDERR "Creating directory for $link\n";
    mkpath( $entry_home, {verbose => 1} );
}

my $doc  = $parser->parse_file($template);

# Edit the document. 

# 1. Set updated
my $updated = shift @{$doc->getElementsByTagNameNS($atomNS,'updated')};
$updated->removeChildNodes();
$updated->appendText($date);

# 2. Set link
my $hreflink = shift @{$doc->getElementsByTagNameNS($atomNS,'link')};
if(!$update) {
    $hreflink->setAttribute('href',$link);
}

# 3. Set id
my $id = shift @{$doc->getElementsByTagNameNS($atomNS,'id')};
if(!$update) {
    $id->removeChildNodes();
    $id->appendText($base_uri . $link);
}

# Finally. Print document
print STDERR "$entry_file\n";

open my $out, ">$entry_file";
binmode $out; 
$doc->toFH($out);
close $out;

sub usage {

    print STDERR<<"END";

Utility for maintaining a date structured directory tree of blog entries. The
script creates directories of the form

\t<DIRECTORY>/yyyy/mm/<ENTRY NAME>

Usage:

\t$0 <Options>

where options are

\t--entry\t\t<ENTRY NAME>\tName of directory where the atom file is put
\t--directory\t<DIRECTORY>\tName of the directory where the date structure\n\t\t\t\t\tis situated
\t--base_uri\t<BASE_URI>\tThe base URI of the dirctory given\n\t\t\t\t\tin the --directory option

or

\t--update\t<FILE NAME>\tUpdates the modification time stamp in the file\n\t\t\t\t\tUseful if you don\'t enjoy writing w3cdtf manually

Examples:

The command "entry_manager --entry atom --directory entries"
creates a new directory "entries/2009/06/atom" and an atom stub file"
entries/2009/06/atom/atom.atom" (given that the current year is 2009 and that
the program is run i June).

"entry_manager --update entries/2009/06/atom/atom.atom" sets the modification
date to $date in that file

END

    exit(0);

}

#
# $Log$
# Revision 1.6  2009/07/22 14:56:01  sigfrid
# no comments
#
# Revision 1.5  2009/07/06 16:00:57  sigfrid
# now with rcs tags
#
#
