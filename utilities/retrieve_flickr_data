#!/usr/bin/perl -w

use strict;
require LWP::UserAgent;
use File::Path;
use XML::LibXML;
use XML::LibXSLT;
use Getopt::Long;

my $parser      = new XML::LibXML; 

# Constants 
my $xml_version = '1.0';
my $char_encod  = 'UTF-8';
my $atomNS      = 'http://www.w3.org/2005/Atom';
my $dcNS        = 'http://purl.org/dc/elements/1.1/';

my $ua = LWP::UserAgent->new;
$ua->timeout(10);
$ua->env_proxy;

my $base_uri = join('',('http://api.flickr.com/services/feeds/photos_public.gne?',
			join('&',('id=36853098@N06',
				  'lang=en-us',
				  'format=atom'))));

#my @years  = (2009,2010,2011);
my @years  = (2011);
my @months = ('january');
#,
#	      'february',
#	      'march',
#	      'april',
#	      'may',
#	      'june',
#	      'july',
#	      'august',
#	      'september',
#	      'october',
#	      'november',
#	      'december');

my %monthseq = ('january'   => '01',
		'february'  => '02',
		'march'     => '03',
		'april'     => '04',
		'may'       => '05',
		'june'      => '06',
		'july'      => '07',
		'august'    => '08',
		'september' => '09',
		'october'   => '10',
		'november'  => '11',
		'december'  => '12');

my $transform_sheet = 'utilities/flickr_transform.xsl';
my $xslt            = new XML::LibXSLT;
my $style_doc       = $parser->parse_file($transform_sheet);
my $stylesheet      = $xslt->parse_stylesheet($style_doc);

foreach my $year (@years) {
    foreach my $month (@months) {
	my $uri = join '',($base_uri,
			   '&tags=',
			   $year,
			   ',', 
			   $month);

	print STDERR "$uri $month $monthseq{$month}\n";

	my $response = $ua->get($uri);

	if ($response->is_success) {
	    my $dom = XML::LibXML->load_xml(
		string => $response->decoded_content
	    );
	    if($#{$dom->getElementsByTagNameNS($atomNS,'entry')}>0) {

		my $date = &date_gen();
		my $result = 
		    $stylesheet->transform($dom,
					   'year'      => "'" . $year            . "'",
					   'month'     => "'" . $month           . "'",
					   'date'      => "'" . $date            . "'",
					   'month_num' => "'" . $monthseq{$month}. "'");

		my $entry_home = 'entries/'.$year.'/'.$monthseq{$month}.'/images/';
		mkpath( $entry_home, {verbose => 1} );
		open my $fh,">$entry_home"."images.atom";
		binmode $fh;
		print $fh $result->toString();
	    }
	} else {
	    die $response->status_line;
	}
    }
}

sub date_gen {

    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
    my $yyyy = 1900 + $year;
    my $mm   = $mon +1;
    my $dd   = $mday;

    $mm   = '0' . $mm    unless ($mm   =~ m/\d\d/);
    $dd   = '0' . $dd    unless ($dd   =~ m/\d\d/);
    $hour = '0' . $hour  unless ($hour =~ m/\d\d/);
    $min  = '0' . $min   unless ($min  =~ m/\d\d/);
    $sec  = '0' . $sec   unless ($sec  =~ m/\d\d/);

    my $zone        = '+01:00';

    my $date = join('T',(join('-',($yyyy,$mm,$dd)),
			 join(':',($hour,$min,$sec)))) . $zone;

    return $date;

}
